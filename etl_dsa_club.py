# -*- coding: utf-8 -*-
"""ETL_DSA_club.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ix9ri1fq-jHsHkE2nYIDrrlF4SttNl20
"""

#Extract Data
import pandas as pd

df = pd.read_csv('jobs.csv')

df.head()

#Transform Data:
df = df.dropna() #method is used to remove or drop the rows containing missing (NaN) values

#Convert a column to lowercase
df['title'] = df['title'].str.capitalize()
df.head()

import pandas as pd

# Define a custom transformation function that compresses consecutive characters
def custom_transform(value):
    compressed_str = ""
    count = 1

    # Iterate through each character in the string
    for i in range(1, len(value)):

        # Check if the current character is the same as the previous one
        if value[i] == value[i - 1]:

            # If yes, increment the count for consecutive characters
            count += 1

        else:
            # If not, append the previous character and its count to the compressed string
            compressed_str += value[i - 1] + str(count)

            # Reset count for a new character
            count = 1

    # Append the last character and its count to the compressed string
    compressed_str += value[-1] + str(count)

    return compressed_str
df['compressed_column'] = df['title'].apply(custom_transform)
print(df)

#Load Data:
#Save the transformed data to the desired target, which could be a different file format, a database, or another system.

jobs = 'transformed_data.csv'#saving the transformed datset to csv
df.to_csv(jobs, index=False)

loaded_df = pd.read_csv(jobs) #load the saved dataset into new DataFrame

'''Example: Load data into a database using SQLAlchemy
from sqlalchemy import create_engine

engine = create_engine('your_database_connection_string')
df.to_sql('table_name', engine, index=False, if_exists='replace')'''